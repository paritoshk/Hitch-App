{"ast":null,"code":"var _jsxFileName = \"/Users/evamarie/Documents/computer_science/Hitch/meetupblast-react-master/src/filterContainer.jsx\";\n\nvar React = require('react');\n\nvar Tag = require('./tag.jsx');\n\nvar FilterContainer = React.createClass({\n  displayName: \"FilterContainer\",\n  componentWillMount: function () {\n    this.fire_response();\n  },\n  fire_response: function () {\n    const REQUEST = require('request');\n\n    var $this = this;\n    var streamingClient = REQUEST.GET_STREAMING_CLIENT();\n    var stream_on = REQUEST.FIRE_FILTER(this.props.CITY_LIST, this.props.TOPIC_LIST);\n    stream_on.on('data', function (res) {\n      $this.props.on_get_data(res);\n      $this.stream_start();\n    }).on('error', function (err) {});\n  },\n  stream_start: function () {\n    var $this = this;\n    var streamingClient = REQUEST.GET_STREAMING_CLIENT();\n    var stream_on = REQUEST.STREAM_START(this.props.CITY_LIST, this.props.TOPIC_LIST);\n    stream_on.on('data', function (res) {\n      $this.props.on_get_data(res, true);\n    }).on('error', function (err) {});\n  },\n  set_list: function (method, list) {\n    this.props.set_list(method, list);\n    this.fire_response();\n  },\n  render: function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meetup-filter-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      key: \"1\",\n      type: \"topic\",\n      set_list: this.set_list,\n      list: this.props.TOPIC_LIST,\n      fire_response: this.fire_response,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }));\n  }\n});\nmodule.exports = FilterContainer;","map":{"version":3,"sources":["/Users/evamarie/Documents/computer_science/Hitch/meetupblast-react-master/src/filterContainer.jsx"],"names":["React","require","Tag","FilterContainer","createClass","componentWillMount","fire_response","REQUEST","$this","streamingClient","GET_STREAMING_CLIENT","stream_on","FIRE_FILTER","props","CITY_LIST","TOPIC_LIST","on","res","on_get_data","stream_start","err","STREAM_START","set_list","method","list","render","module","exports"],"mappings":";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAjB;;AAEA,IAAIE,eAAe,GAAGH,KAAK,CAACI,WAAN,CAAkB;AAAA;AACpCC,EAAAA,kBAAkB,EAAE,YAAW;AAC3B,SAAKC,aAAL;AACH,GAHmC;AAIpCA,EAAAA,aAAa,EAAE,YAAW;AACxB,UAAMC,OAAO,GAAGN,OAAO,CAAC,SAAD,CAAvB;;AAEE,QAAIO,KAAK,GAAG,IAAZ;AACA,QAAIC,eAAe,GAAGF,OAAO,CAACG,oBAAR,EAAtB;AACA,QAAIC,SAAS,GAAGJ,OAAO,CAACK,WAAR,CAAoB,KAAKC,KAAL,CAAWC,SAA/B,EAA0C,KAAKD,KAAL,CAAWE,UAArD,CAAhB;AACAJ,IAAAA,SAAS,CAACK,EAAV,CAAa,MAAb,EAAqB,UAASC,GAAT,EAAc;AAC/BT,MAAAA,KAAK,CAACK,KAAN,CAAYK,WAAZ,CAAwBD,GAAxB;AACAT,MAAAA,KAAK,CAACW,YAAN;AACH,KAHD,EAGGH,EAHH,CAGM,OAHN,EAGe,UAASI,GAAT,EAAc,CAAE,CAH/B;AAIH,GAdmC;AAepCD,EAAAA,YAAY,EAAE,YAAW;AACrB,QAAIX,KAAK,GAAG,IAAZ;AACA,QAAIC,eAAe,GAAGF,OAAO,CAACG,oBAAR,EAAtB;AACA,QAAIC,SAAS,GAAGJ,OAAO,CAACc,YAAR,CAAqB,KAAKR,KAAL,CAAWC,SAAhC,EAA2C,KAAKD,KAAL,CAAWE,UAAtD,CAAhB;AACAJ,IAAAA,SAAS,CAACK,EAAV,CAAa,MAAb,EAAqB,UAASC,GAAT,EAAc;AAC/BT,MAAAA,KAAK,CAACK,KAAN,CAAYK,WAAZ,CAAwBD,GAAxB,EAA6B,IAA7B;AACH,KAFD,EAEGD,EAFH,CAEM,OAFN,EAEe,UAASI,GAAT,EAAc,CAAE,CAF/B;AAGH,GAtBmC;AAuBpCE,EAAAA,QAAQ,EAAE,UAASC,MAAT,EAAiBC,IAAjB,EAAuB;AAC7B,SAAKX,KAAL,CAAWS,QAAX,CAAoBC,MAApB,EAA4BC,IAA5B;AACA,SAAKlB,aAAL;AACH,GA1BmC;AA2BpCmB,EAAAA,MAAM,EAAE,YAAW;AACf,wBACQ;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAC,GAAT;AAAa,MAAA,IAAI,EAAC,OAAlB;AACI,MAAA,QAAQ,EAAE,KAAKH,QADnB;AAEI,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWE,UAFrB;AAGI,MAAA,aAAa,EAAE,KAAKT,aAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR;AAQH;AApCmC,CAAlB,CAAtB;AAwCAoB,MAAM,CAACC,OAAP,GAAiBxB,eAAjB","sourcesContent":["var React = require('react');\nvar Tag = require('./tag.jsx');\n\nvar FilterContainer = React.createClass({\n    componentWillMount: function() {\n        this.fire_response();\n    },\n    fire_response: function() {\n      const REQUEST = require('request');\n\n        var $this = this;\n        var streamingClient = REQUEST.GET_STREAMING_CLIENT();\n        var stream_on = REQUEST.FIRE_FILTER(this.props.CITY_LIST, this.props.TOPIC_LIST);\n        stream_on.on('data', function(res) {\n            $this.props.on_get_data(res);\n            $this.stream_start();\n        }).on('error', function(err) {});\n    },\n    stream_start: function() {\n        var $this = this;\n        var streamingClient = REQUEST.GET_STREAMING_CLIENT();\n        var stream_on = REQUEST.STREAM_START(this.props.CITY_LIST, this.props.TOPIC_LIST);\n        stream_on.on('data', function(res) {\n            $this.props.on_get_data(res, true);\n        }).on('error', function(err) {});\n    },\n    set_list: function(method, list) {\n        this.props.set_list(method, list);\n        this.fire_response();\n    },\n    render: function() {\n        return (\n                <div className=\"meetup-filter-container\">\n                    <Tag key=\"1\" type=\"topic\"\n                        set_list={this.set_list}\n                        list={this.props.TOPIC_LIST}\n                        fire_response={this.fire_response}></Tag>\n                </div>\n        )\n    }\n});\n\n\nmodule.exports = FilterContainer;\n"]},"metadata":{},"sourceType":"module"}