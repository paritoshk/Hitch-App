{"ast":null,"code":"var _jsxFileName = \"/Users/evamarie/Documents/computer_science/Hitch/meetupblast-react-master_1/src/tag.jsx\";\nconst $ = window.$;\n\nvar React = require('react');\n\nvar Tag = React.createClass({\n  displayName: \"Tag\",\n  getInitialState: function () {\n    return {\n      list: []\n    };\n  },\n  CHECK_CHANGE: function (eve, list, container) {\n    var $this = this;\n    var checkbox_val = $(eve).val();\n    var type = $(eve).attr('container');\n    var check2 = checkbox_val;\n\n    if ($(eve).is(':checked')) {\n      list.push(check2);\n      var tag_text = $('<span>').addClass('tag_text').text(checkbox_val);\n      var tag_close = $('<span>').addClass('tag_close').text('x').attr('val', checkbox_val);\n      var single_tag = $(\"<span>\").addClass('single_tag').attr('val', checkbox_val).append(tag_text).append(tag_close);\n      $(tag_close).click(function () {\n        var val = $(this).attr('val');\n        $(single_tag).remove();\n        list.remove(val);\n        $this.props.set_list(type, list);\n        container.find('.tag_checkbox[value=\"' + val + '\"]').prop('checked', false);\n      });\n      container.find('.tag_name').append(single_tag);\n      $this.props.set_list(type, list);\n    } else {\n      container.find('.single_tag[val=\"' + checkbox_val + '\"]').remove();\n      list.remove(check2);\n      $this.props.set_list(type, list);\n    }\n  },\n  //create city or topic list items\n  CREATE_TAG: function (type, data) {\n    $this = this;\n    var list = this.props.list;\n    var container = $('.' + type + '_container');\n    var checkbox = $('<input>').attr({\n      type: 'checkbox',\n      name: 'brand',\n      class: 'tag_checkbox',\n      container: type,\n      value: data\n    });\n    if ($.inArray(data, list) != -1) checkbox.prop('checked', true);\n    var checkbox_text = $('<span>').text(data);\n    var single_tag = $('<label>').append(checkbox).append(checkbox_text);\n    checkbox.change(function () {\n      $this.CHECK_CHANGE(this, list, container);\n    });\n    return single_tag;\n  },\n  set_filter_list: function (method, list) {\n    var $this = this;\n    $('.' + method + '_search').typeahead({\n      hint: true,\n      highlight: true,\n      minLength: 0\n    }, {\n      name: method,\n      source: substringMatcher(list),\n      templates: {\n        pending: true,\n        suggestion: function (data) {\n          if (data) {\n            var single_record = $this.CREATE_TAG(method, data);\n            return single_record;\n          } else return;\n        }\n      }\n    });\n    setTimeout(function () {\n      $('.' + method + '_search').typeahead('val', '').focus();\n    }, 1000);\n  },\n  componentWillMount: function () {\n    var $this = this;\n    var method = this.props.type;\n    REQUEST.GET_TAG_LIST(method, function (full_data) {\n      var city_list = [];\n      var cities = full_data.aggregations.city.buckets;\n      $.each(cities, function (i, city) {\n        city_list.push(city.key);\n      });\n      $this.set_filter_list(method, city_list);\n    });\n  },\n  render: function () {\n    var method = this.props.type + '_search col-xs-12';\n    var inside_container = this.props.type + \"_container block col-xs-12\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: this.props.key,\n      className: inside_container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"block_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Search by \", this.props.type), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tag_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full_row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"search\",\n      className: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"search_thumb glyphicon glyphicon-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    })));\n  }\n});\nmodule.exports = Tag;","map":{"version":3,"sources":["/Users/evamarie/Documents/computer_science/Hitch/meetupblast-react-master_1/src/tag.jsx"],"names":["$","window","React","require","Tag","createClass","getInitialState","list","CHECK_CHANGE","eve","container","$this","checkbox_val","val","type","attr","check2","is","push","tag_text","addClass","text","tag_close","single_tag","append","click","remove","props","set_list","find","prop","CREATE_TAG","data","checkbox","name","class","value","inArray","checkbox_text","change","set_filter_list","method","typeahead","hint","highlight","minLength","source","substringMatcher","templates","pending","suggestion","single_record","setTimeout","focus","componentWillMount","REQUEST","GET_TAG_LIST","full_data","city_list","cities","aggregations","city","buckets","each","i","key","render","inside_container","module","exports"],"mappings":"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","sourcesContent":["const $ = window.$;\nvar React = require('react');\nvar Tag = React.createClass({\n    getInitialState: function() {\n        return {\n            list: []\n        };\n    },\n    CHECK_CHANGE: function(eve, list, container) {\n        var $this = this;\n        var checkbox_val = $(eve).val();\n        var type = $(eve).attr('container');\n        var check2 = checkbox_val;\n        if ($(eve).is(':checked')) {\n            list.push(check2);\n            var tag_text = $('<span>').addClass('tag_text').text(checkbox_val);\n            var tag_close = $('<span>').addClass('tag_close').text('x').attr('val', checkbox_val);\n            var single_tag = $(\"<span>\").addClass('single_tag').attr('val', checkbox_val).append(tag_text).append(tag_close);\n            $(tag_close).click(function() {\n                var val = $(this).attr('val');\n                $(single_tag).remove();\n                list.remove(val);\n                $this.props.set_list(type, list);\n                container.find('.tag_checkbox[value=\"' + val + '\"]').prop('checked', false);\n            });\n            container.find('.tag_name').append(single_tag);\n            $this.props.set_list(type, list);\n        } else {\n            container.find('.single_tag[val=\"' + checkbox_val + '\"]').remove();\n            list.remove(check2);\n            $this.props.set_list(type, list);\n        }\n    },\n    //create city or topic list items\n    CREATE_TAG: function(type, data) {\n        $this = this;\n        var list = this.props.list;\n        var container = $('.' + type + '_container');\n        var checkbox = $('<input>').attr({\n            type: 'checkbox',\n            name: 'brand',\n            class: 'tag_checkbox',\n            container: type,\n            value: data\n        });\n        if ($.inArray(data, list) != -1)\n            checkbox.prop('checked', true);\n        var checkbox_text = $('<span>').text(data);\n        var single_tag = $('<label>').append(checkbox).append(checkbox_text);\n        checkbox.change(function() {\n            $this.CHECK_CHANGE(this, list, container);\n        });\n        return single_tag;\n    },\n    set_filter_list: function(method, list) {\n        var $this = this;\n        $('.' + method + '_search').typeahead({\n            hint: true,\n            highlight: true,\n            minLength: 0\n        }, {\n            name: method,\n            source: substringMatcher(list),\n            templates: {\n                pending: true,\n                suggestion: function(data) {\n                    if (data) {\n                        var single_record = $this.CREATE_TAG(method, data);\n                        return single_record;\n                    } else\n                        return;\n                }\n            }\n        });\n        setTimeout(function() {\n            $('.' + method + '_search').typeahead('val', '').focus();\n        }, 1000);\n    },\n    componentWillMount: function() {\n        var $this = this;\n        var method = this.props.type;\n        REQUEST.GET_TAG_LIST(method, function(full_data) {\n            var city_list = [];\n            var cities = full_data.aggregations.city.buckets;\n            $.each(cities, function(i, city) {\n                city_list.push(city.key);\n            });\n            $this.set_filter_list(method, city_list);\n        });\n    },\n    render: function() {\n        var method = this.props.type + '_search col-xs-12';\n        var inside_container = this.props.type + \"_container block col-xs-12\";\n        return (\n                <div key={this.props.key} className={inside_container}>\n                    <label className=\"block_label\">Search by {this.props.type}</label>\n                    <div className=\"tag_name\">\n                    </div>\n                    <div className=\"full_row\">\n                        <input type=\"text\" placeholder=\"search\" className={method} />\n                        <span className=\"search_thumb glyphicon glyphicon-search\" ></span>\n                    </div>\n                </div>\n        );\n    }\n});\n\n\nmodule.exports = Tag;\n"]},"metadata":{},"sourceType":"module"}